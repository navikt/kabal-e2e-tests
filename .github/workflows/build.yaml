name: Build image

on:
  workflow_dispatch:
    inputs:
      run-tests:
        description: 'Run E2E tests?'
        required: true
        default: true
        type: boolean
  workflow_call:
    inputs:
      run-tests:
        description: 'Run E2E tests?'
        required: true
        default: false
        type: boolean
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: package-lock.json
      
      - name: Install dependencies
        run: npm ci --prefer-offline
      
      - name: Get image tag
        id: image-tag
        shell: bash
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Build and publish image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: klage # required
          tag: ${{ steps.image-tag.outputs.tag }} # optional
          push_image: true # optional, default true
          pull: true # optional, default true
          dockerfile: Dockerfile # optional, default Dockerfile
          docker_context: . # optional, default .
          image_suffix: # optional, default empty
          cache_from: type=gha # optional, default type=gha
          cache_to: type=gha,mode=max # optional, default type=gha,mode=max
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }} # required, but is defined as an organization secret
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }} # required, but is defined as an organization variable
          build_args: |
            CI=${CI}

  run:
    runs-on: ubuntu-latest
    if: ${{ inputs.run-tests }}
    needs: build
    steps:
      - name: Generate UUID
        id: uuid
        shell: bash
        run: echo "uuid=$(uuidgen)" >> $GITHUB_OUTPUT

      - name: Run E2E tests
        uses: nais/deploy/actions/deploy@v1
        env:
          NAIS_DEPLOY_APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          VAR: jobid=${{ steps.uuid.outputs.uuid }},image=${{ needs.build.outputs.image }}
          TEAM: klage
          RESOURCE: nais/e2ejob.yaml
          IMAGE: ${{ needs.build.outputs.image }}
